{{#if disclaimer}}// {{{ disclaimer }}}{{#if header}}
{{{header}}}{{/if}}{{/if}}
// @eslint-disable camelcase

import { H3Event } from "h3";

export default defineEventHandler(async (event: H3Event) => {
  return await filterErrors(event, "{{ name }}.lookup", async (event: H3Event) => {{{curlyOpen}}}{{#if typeDef.apiConfig.lookup.admin}}
    return await requireAdminAccountObject(event, "{{ name }}.lookup", async (event: H3Event, session, account) => {{{curlyOpen}}}{{else}}{{#if typeDef.apiConfig.lookup.owner}}
    return await requireAccountObject(event, "{{ name }}.lookup", async (event: H3Event, session, account) => {{{curlyOpen}}}{{else}}{{#if typeDef.apiConfig.lookup.session}}
    return await requireAccount(event, "{{ name }}.lookup", async (event: H3Event, session) => {{{curlyOpen}}}{{/if}}{{/if}}{{/if}}
      const id = event?.context?.params?.id;
      if (!id) throw notFound("");
      const {{ name }}Repo = {{ name }}Repository();
      const {{ name }}_by_id = await {{ name }}Repo.safeFindById(id);
      if ({{ name }}_by_id) return {{ name }}_by_id;
      {{#each typeDef.alternateLookupFields}}
      const {{ ../name }}_by_{{ this }} = await {{ ../name }}Repo.safeFindFirstBy("{{ this }}", id);
      if ({{ ../name }}_by_{{ this }}) return {{ ../name }}_by_{{ this }};
      {{/each}}
      throw notFound(id);{{#if typeDef.apiConfig.lookup.admin}}
    });{{else}}{{#if typeDef.apiConfig.lookup.owner}}
    });{{else}}{{#if typeDef.apiConfig.lookup.session}}
    });{{/if}}{{/if}}{{/if}}
  });
});
