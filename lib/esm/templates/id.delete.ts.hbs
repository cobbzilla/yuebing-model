{{#if disclaimer}}// {{{ disclaimer }}}{{#if header}}
{{{header}}}{{/if}}{{/if}}
// @eslint-disable camelcase

import { MobilettoOrmSyncError } from "mobiletto-orm-typedef";

export default defineEventHandler(async (event) => {
  filterErrors(event, "{{ name }}.delete", async (event) => {{{curlyOpen}}}{{#if typeDef.apiConfig.delete.admin}}
    requireAdminAccountObject(event, "{{ name }}.delete", async (event, _session, _account) => {{{curlyOpen}}}{{else}}{{#if typeDef.apiConfig.delete.owner}}
    requireAccountObject(event, "{{ name }}.delete", async (event, session, account) => {{{curlyOpen}}}{{else}}{{#if typeDef.apiConfig.delete.session}}
    requireAccount(event, "{{ name }}.delete", async (event, _session) => {{{curlyOpen}}}{{/if}}{{/if}}{{/if}}
      const id = event.context.params.id;
      const {{ name }}Repo = {{ name }}Repository();
      try {
        const {{ name }}_by_id = await {{ name }}Repo.safeFindById(id);
        if ({{ name }}_by_id) {
          {{#if typeDef.apiConfig.delete.owner}}
          if (!account.admin && {{ name }}_by_id.account !== session.account) throw forbidden();
          {{/if}}
          return await {{ name }}Repo.remove({{ name }}_by_id);
        }
        {{#each alternateLookupFields}}
          const {{ name }}_by_{{ this }} = await {{ name }}Repo.safeFindBy("{{ this }}", id);
          if ({{ name }}_by_{{ this }}) {
            {{#if typeDef.apiConfig.delete.owner}}
            if (!account.admin && {{ name }}_by_{{ this }}.account !== session.account) throw forbidden();
            {{/if}}
            return await {{ name }}Repo.remove({{ name }}_by_{{ this }});
          }
        {{/each}}
      } catch (e) {
        if (e instanceof MobilettoOrmSyncError) {
          logger.warn(`{{ name }}.delete: sync error: ${e}`);
          throw conflict();
        }
        logger.error(`{{ name }}.delete: unexpected error: ${e}`);
        throw serverError();
      }
      throw notFound(id);{{#if typeDef.apiConfig.delete.admin}}
    });{{else}}{{#if typeDef.apiConfig.delete.owner}}
    });{{else}}{{#if typeDef.apiConfig.delete.session}}
    });{{/if}}{{/if}}{{/if}}
  });
});
