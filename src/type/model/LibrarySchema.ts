// DO NOT EDIT THIS FILE. AUTO-GENERATED BY mobiletto-orm-typedef-gen

import * as yup from "yup";

export const Library_autoscanSchemaFields = {
    initialDelay: yup.number()
        .min(60000, 'library_autoscan_initialDelay_minValue')
        .max(3600000, 'library_autoscan_initialDelay_maxValue')
        .typeError('library_autoscan_initialDelay_invalid')
        .notRequired()
        .default(600000),
    interval: yup.number()
        .min(60000, 'library_autoscan_interval_minValue')
        .max(31622400000, 'library_autoscan_interval_maxValue')
        .typeError('library_autoscan_interval_invalid')
        .notRequired()
        .default(86400000),
};

export const Library_autoscanSchema = yup.object(Library_autoscanSchemaFields);


export const LibrarySchemaFields = {
    name: yup.string().trim().transform(v => v === '' ? undefined : v)
        .min(1, 'name_min')
        .max(500, 'name_max')
        .matches(/^[A-Z][A-Z\d-._]+$/i, 'name_regex')
        .typeError('name_invalid')
        .notRequired(),
    sources: yup.array().of(yup.string()
            .oneOf([""], 'sources_enum')
            .typeError('sources_invalid'))
        .typeError('sources_invalid')
        .notRequired(),
    destinations: yup.array().of(yup.string()
            .oneOf([""], 'destinations_enum')
            .typeError('destinations_invalid'))
        .typeError('destinations_invalid')
        .notRequired(),
    autoscanEnabled: yup.boolean()
        .typeError('autoscanEnabled_invalid')
        .required('autoscanEnabled_required'),
    autoscan: Library_autoscanSchema
        .notRequired()
        .when(["autoscanEnabled"], {
            is: (autoscanEnabled: boolean) => {
                const w = (v: Record<string, unknown>) => v.autoscanEnabled === true;
                const v: Record<string, unknown> = { autoscanEnabled };
                return w(v);
            },
            then: (schema) => schema.required('autoscan_required'),
            otherwise: (schema) => schema.notRequired(),
        }),
};

export const LibrarySchema = yup.object(LibrarySchemaFields);
